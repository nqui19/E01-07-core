{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nexport default function UserAPI(token) {\n  _s();\n\n  const [Logged, isLogged] = useState(false);\n  const [Admin, isAdmin] = useState(false);\n  const [Seller, isSeller] = useState(false);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    console.log(\"Working\");\n\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          isLogged(true);\n          if (res.data.role === 1) isAdmin(true);\n          if (res.data.role === 2) isSeller(true);\n          console.log(res);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert('Please login to continue');\n    const check = cart.every(item);\n  };\n\n  return {\n    isLogged: [Logged, isLogged],\n    isAdmin: [Admin, isAdmin],\n    isSeller: [Seller, isSeller]\n  };\n}\n\n_s(UserAPI, \"z/dgdjjpxbtgkRbPgU3gI/Q0yZE=\");\n\n_c = UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["C:/Users/MyPC/Desktop/e-commerce2/client/src/api/UserAPI.js"],"names":["axios","React","useState","useEffect","UserAPI","token","Logged","isLogged","Admin","isAdmin","Seller","isSeller","cart","setCart","console","log","getUser","res","get","headers","Authorization","data","role","err","alert","response","msg","addCart","product","check","every","item"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACnC,QAAM,CAACC,MAAD,EAASC,QAAT,IAAqBL,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAM,CAACM,KAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACQ,MAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACU,IAAD,EAAMC,OAAN,IAAiBX,QAAQ,CAAC,EAAD,CAA/B;AACAC,EAAAA,SAAS,CAAC,MAAK;AACXW,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACA,QAAGV,KAAH,EAAS;AACL,YAAMW,OAAO,GAAG,YAAY;AACxB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAU,aAAV,EAAwB;AACtCC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAEf;AAAhB;AAD6B,WAAxB,CAAlB;AAGAE,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,cAAGU,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAArB,EAAwBb,OAAO,CAAC,IAAD,CAAP;AACxB,cAAGQ,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAArB,EAAwBX,QAAQ,CAAC,IAAD,CAAR;AACxBG,UAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,SARD,CAQE,OAAOM,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,GAAnB,CAAL;AACH;AACJ,OAZD;;AAaAV,MAAAA,OAAO;AACV;AACJ,GAlBQ,EAkBP,CAACX,KAAD,CAlBO,CAAT;;AAoBA,QAAMsB,OAAO,GAAG,MAAMC,OAAN,IAAkB;AAC9B,QAAG,CAACrB,QAAJ,EAAc,OAAOiB,KAAK,CAAC,0BAAD,CAAZ;AACd,UAAMK,KAAK,GAAGjB,IAAI,CAACkB,KAAL,CAAWC,IAAX,CAAd;AACH,GAHD;;AAKA,SAAO;AACHxB,IAAAA,QAAQ,EAAE,CAACD,MAAD,EAAQC,QAAR,CADP;AAEHE,IAAAA,OAAO,EAAE,CAACD,KAAD,EAAQC,OAAR,CAFN;AAGHE,IAAAA,QAAQ,EAAE,CAACD,MAAD,EAAQC,QAAR;AAHP,GAAP;AAKH;;GAnCuBP,O;;KAAAA,O","sourcesContent":["import axios from 'axios'\r\nimport React,{useState, useEffect} from 'react'\r\n\r\nexport default function UserAPI(token) {\r\n    const [Logged, isLogged] = useState(false)\r\n    const [Admin,isAdmin] = useState(false)\r\n    const [Seller,isSeller] = useState(false)\r\n    const [cart,setCart] = useState([])\r\n    useEffect(()=> {\r\n        console.log(\"Working\")\r\n        if(token){\r\n            const getUser = async () => {\r\n                try {\r\n                    const res = await axios.get('/user/infor',{\r\n                        headers: {Authorization: token}\r\n                    })\r\n                    isLogged(true)\r\n                    if(res.data.role === 1) isAdmin(true)\r\n                    if(res.data.role === 2) isSeller(true)\r\n                    console.log(res)\r\n                } catch (err) {\r\n                    alert(err.response.data.msg)\r\n                }\r\n            }\r\n            getUser()\r\n        }\r\n    },[token])\r\n\r\n    const addCart = async(product) => {\r\n        if(!isLogged) return alert('Please login to continue')\r\n        const check = cart.every(item)\r\n    }\r\n\r\n    return {\r\n        isLogged: [Logged,isLogged],\r\n        isAdmin: [Admin, isAdmin],\r\n        isSeller: [Seller,isSeller]\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}