{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MyPC\\\\Desktop\\\\e-commerce2\\\\client\\\\src\\\\components\\\\mainpage\\\\ChangePassword\\\\ChangePassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { GlobalState } from '../../../GlobalState';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst crypto = require('crypto');\n\nexport default function ChangePassword() {\n  _s();\n\n  const state = useContext(GlobalState);\n  const [token] = state.token;\n  const [infor, setInfor] = state.userAPI.infor;\n  const [check, setCheck] = useState(false);\n  const [pass, setPass] = useState('');\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(e.target);\n  }; //var hashLogin = crypto.createHash('md5').update(password).digest('hex');\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Old Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"text\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), check ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"New Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChangePassword, \"HsJijg7+1DfX8NSqJRaiVB6adj8=\");\n\n_c = ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["C:/Users/MyPC/Desktop/e-commerce2/client/src/components/mainpage/ChangePassword/ChangePassword.js"],"names":["React","useContext","useState","GlobalState","Link","axios","crypto","require","ChangePassword","state","token","infor","setInfor","userAPI","check","setCheck","pass","setPass","handleChangeInput","e","name","value","target","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AAErC,QAAMC,KAAK,GAAGR,UAAU,CAACE,WAAD,CAAxB;AACA,QAAM,CAACO,KAAD,IAAUD,KAAK,CAACC,KAAtB;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBH,KAAK,CAACI,OAAN,CAAcF,KAAvC;AACA,QAAM,CAACG,KAAD,EAAOC,QAAP,IAAmBb,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM,CAACc,IAAD,EAAMC,OAAN,IAAiBf,QAAQ,CAAC,EAAD,CAA/B;;AACA,QAAMgB,iBAAiB,GAAGC,CAAC,IAAG;AAC1B,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,CAAC,CAACG,MAAd;AACH,GAJD,CAPqC,CAYrC;;;AACA,sBACI;AAAA,4BACI;AAAA,8CAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAOQR,KAAK,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,GAGE,EAVf;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA7BuBN,c;;KAAAA,c","sourcesContent":["import React,{useContext,useState} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nconst crypto = require('crypto')\r\nexport default function ChangePassword() {\r\n\r\n    const state = useContext(GlobalState)\r\n    const [token] = state.token\r\n    const [infor,setInfor] = state.userAPI.infor\r\n    const [check,setCheck] = useState(false)\r\n    const [pass,setPass] = useState('')\r\n    const handleChangeInput = e =>{\r\n        const {name, value} = e.target\r\n\r\n        console.log(e.target)\r\n    }\r\n    //var hashLogin = crypto.createHash('md5').update(password).digest('hex');\r\n    return (\r\n        <div>\r\n            <div>\r\n                Old Password\r\n                <input name=\"text\" name='password'/>\r\n                <button>Confirm</button>\r\n            </div>\r\n            {\r\n                check?\r\n                <div>\r\n                New Password\r\n                </div>:\"\"\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}