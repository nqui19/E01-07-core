{"ast":null,"code":"var _jsxFileName = \"D:\\\\New\\\\CNPM\\\\client\\\\src\\\\components\\\\mainpage\\\\ChangePassword\\\\ForgotPass.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { GlobalState } from \"../../../GlobalState\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChangePassword() {\n  _s();\n\n  const crypto = require(\"crypto\");\n\n  const history = useHistory();\n  const state = useContext(GlobalState);\n  const [token] = state.token;\n  const [infor, setInfor] = state.userAPI.infor;\n  const [users, setUsers] = state.userAPI.users;\n  const [check, setCheck] = useState(false);\n  const [confirm, setConfirm] = useState([]);\n  const [pass, setPass] = useState(\"\");\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setConfirm({ ...confirm,\n      [name]: value\n    });\n\n    if (name === \"new-password\") {\n      setPass(value);\n    }\n  };\n\n  const getUsers = async () => {\n    const res = await axios.get(\"/user/users\");\n    setUsers(res.data.users);\n  };\n\n  const handleSubmit_Confirm = e => {\n    e.preventDefault();\n    users.forEach(user => {\n      if (user.name === confirm.name && user.email === confirm.email) {\n        setCheck(true);\n        setInfor(user);\n      }\n    });\n  };\n\n  const handleSubmit_Change = async e => {\n    e.preventDefault();\n\n    if (check) {\n      if (/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$#!%*?&])[A-Za-z\\d@$#!%*?&]{6,14}$/.test(pass)) {\n        var hashLogin = crypto.createHash(\"md5\").update(pass).digest(\"hex\");\n        infor.password = hashLogin;\n      } else {\n        alert(\"Minimum 6 and maximum 14 characters, at least one uppercase letter, one lowercase letter, one number and one special character\");\n        return;\n      }\n\n      var hashLogin = crypto.createHash(\"md5\").update(pass).digest(\"hex\");\n      infor.password = hashLogin;\n\n      try {\n        await axios.put(\"/user/account/edit\", {\n          infor\n        });\n        window.alert(\"Update account successfully\");\n        history.push(\"/login\");\n      } catch (err) {\n        alert(err.response.data.msg);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"change-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit_Confirm,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            onChange: handleChangeInput,\n            className: \"input-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"name\",\n            name: \"name\",\n            onChange: handleChangeInput,\n            className: \"input-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button\",\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), check ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit_Change,\n        children: [\"New Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"new-password\",\n          onChange: handleChangeInput,\n          className: \"input-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChangePassword, \"r4jwQjHvH9EexseD4bREpbiLvi0=\", false, function () {\n  return [useHistory];\n});\n\n_c = ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["D:/New/CNPM/client/src/components/mainpage/ChangePassword/ForgotPass.js"],"names":["React","useContext","useState","useEffect","GlobalState","Link","axios","useHistory","useParams","ChangePassword","crypto","require","history","state","token","infor","setInfor","userAPI","users","setUsers","check","setCheck","confirm","setConfirm","pass","setPass","getUsers","handleChangeInput","e","name","value","target","res","get","data","handleSubmit_Confirm","preventDefault","forEach","user","email","handleSubmit_Change","test","hashLogin","createHash","update","digest","password","alert","put","window","push","err","response","msg"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { GlobalState } from \"../../../GlobalState\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nexport default function ChangePassword() {\r\n  const crypto = require(\"crypto\");\r\n  const history = useHistory();\r\n  const state = useContext(GlobalState);\r\n  const [token] = state.token;\r\n  const [infor, setInfor] = state.userAPI.infor;\r\n  const [users, setUsers] = state.userAPI.users;\r\n  const [check, setCheck] = useState(false);\r\n  const [confirm, setConfirm] = useState([]);\r\n  const [pass, setPass] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const handleChangeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setConfirm({ ...confirm, [name]: value });\r\n    if (name === \"new-password\") {\r\n      setPass(value);\r\n    }\r\n  };\r\n  const getUsers = async () => {\r\n    const res = await axios.get(\"/user/users\");\r\n    setUsers(res.data.users);\r\n  };\r\n  const handleSubmit_Confirm = (e) => {\r\n    e.preventDefault();\r\n    users.forEach((user) => {\r\n      if (user.name === confirm.name && user.email === confirm.email) {\r\n        setCheck(true);\r\n        setInfor(user);\r\n      }\r\n    });\r\n  };\r\n  const handleSubmit_Change = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (check) {\r\n      if (\r\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$#!%*?&])[A-Za-z\\d@$#!%*?&]{6,14}$/.test(\r\n          pass\r\n        )\r\n      ) {\r\n        var hashLogin = crypto.createHash(\"md5\").update(pass).digest(\"hex\");\r\n        infor.password = hashLogin;\r\n      } else {\r\n        alert(\r\n          \"Minimum 6 and maximum 14 characters, at least one uppercase letter, one lowercase letter, one number and one special character\"\r\n        );\r\n        return;\r\n      }\r\n      var hashLogin = crypto.createHash(\"md5\").update(pass).digest(\"hex\");\r\n      infor.password = hashLogin;\r\n      try {\r\n        await axios.put(\"/user/account/edit\", { infor });\r\n        window.alert(\"Update account successfully\");\r\n        history.push(\"/login\");\r\n      } catch (err) {\r\n        alert(err.response.data.msg);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"change-page\">\r\n      <div className=\"title\">Forgot Password</div>\r\n      <div className=\"container\">\r\n        <form onSubmit={handleSubmit_Confirm}>\r\n          <div>\r\n            Email\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onChange={handleChangeInput}\r\n              className=\"input-box\"\r\n            />\r\n          </div>\r\n          <div>\r\n            Name\r\n            <input\r\n              type=\"name\"\r\n              name=\"name\"\r\n              onChange={handleChangeInput}\r\n              className=\"input-box\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"button\">\r\n            Confirm\r\n          </button>\r\n        </form>\r\n      </div>\r\n      {check ? (\r\n        <div className=\"container\">\r\n          <form onSubmit={handleSubmit_Change}>\r\n            New Password\r\n            <input\r\n              type=\"text\"\r\n              name=\"new-password\"\r\n              onChange={handleChangeInput}\r\n              className=\"input-box\"\r\n            />\r\n            <button type=\"submit\">Confirm</button>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}