{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MyPC\\\\Desktop\\\\e-commerce2\\\\client\\\\src\\\\components\\\\mainpage\\\\ChangePassword\\\\ForgotPass.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { GlobalState } from '../../../GlobalState';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChangePassword() {\n  _s();\n\n  const crypto = require('crypto');\n\n  const state = useContext(GlobalState);\n  const [token] = state.token;\n  const [infor, setInfor] = state.userAPI.infor;\n  const [users, setUsers] = state.userAPI.users;\n  const [check, setCheck] = useState(false);\n  const [confirm, setConfirm] = useState([]);\n  const [pass, setPass] = useState('');\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setConfirm({ ...confirm,\n      [name]: value\n    });\n  };\n\n  const getUsers = async () => {\n    const res = await axios.get('/user/users');\n    setUsers(res.data.users);\n  };\n\n  const handleSubmit_Confirm = e => {\n    e.preventDefault();\n    users.forEach(user => {\n      console.log(user);\n    });\n  };\n\n  const handleSubmit_Change = async e => {\n    e.preventDefault();\n\n    if (check) {\n      var hashLogin = crypto.createHash('md5').update(pass).digest('hex');\n      infor.password = hashLogin;\n\n      try {\n        await axios.put('/user/account/edit', {\n          infor\n        }, {\n          headers: {\n            Authorization: token\n          }\n        });\n        window.alert(\"Update account successfully\");\n      } catch (err) {\n        alert(err.response.data.msg);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"old-pass\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit_Confirm,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            onChange: handleChangeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            onChange: handleChangeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), check ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-pass\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit_Change,\n        children: [\"New Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChangePassword, \"8oxcI9Vkyg2EADiMymW+R/gZFT0=\");\n\n_c = ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["C:/Users/MyPC/Desktop/e-commerce2/client/src/components/mainpage/ChangePassword/ForgotPass.js"],"names":["React","useContext","useState","useEffect","GlobalState","Link","axios","ChangePassword","crypto","require","state","token","infor","setInfor","userAPI","users","setUsers","check","setCheck","confirm","setConfirm","pass","setPass","getUsers","handleChangeInput","e","name","value","target","res","get","data","handleSubmit_Confirm","preventDefault","forEach","user","console","log","handleSubmit_Change","hashLogin","createHash","update","digest","password","put","headers","Authorization","window","alert","err","response","msg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,EAAyBC,QAAzB,EAAkCC,SAAlC,QAAkD,OAAlD;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACrC,QAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,QAAMC,KAAK,GAAGT,UAAU,CAACG,WAAD,CAAxB;AACA,QAAM,CAACO,KAAD,IAAUD,KAAK,CAACC,KAAtB;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBH,KAAK,CAACI,OAAN,CAAcF,KAAvC;AACA,QAAM,CAACG,KAAD,EAAOC,QAAP,IAAmBN,KAAK,CAACI,OAAN,CAAcC,KAAvC;AACA,QAAM,CAACE,KAAD,EAAOC,QAAP,IAAmBhB,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM,CAACiB,OAAD,EAASC,UAAT,IAAuBlB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACmB,IAAD,EAAMC,OAAN,IAAiBpB,QAAQ,CAAC,EAAD,CAA/B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZoB,IAAAA,QAAQ;AACX,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,iBAAiB,GAAGC,CAAC,IAAG;AAC1B,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AACAR,IAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAY,OAACO,IAAD,GAAOC;AAAnB,KAAD,CAAV;AAEH,GAJD;;AAKA,QAAMJ,QAAQ,GAAG,YAAY;AACzB,UAAMM,GAAG,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAU,aAAV,CAAlB;AACAd,IAAAA,QAAQ,CAACa,GAAG,CAACE,IAAJ,CAAShB,KAAV,CAAR;AACH,GAHD;;AAIA,QAAMiB,oBAAoB,GAAGP,CAAC,IAAG;AAC7BA,IAAAA,CAAC,CAACQ,cAAF;AACAlB,IAAAA,KAAK,CAACmB,OAAN,CAAeC,IAAD,IAAU;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KAFD;AAGH,GALD;;AAMA,QAAMG,mBAAmB,GAAG,MAAMb,CAAN,IAAU;AAClCA,IAAAA,CAAC,CAACQ,cAAF;;AAEA,QAAGhB,KAAH,EAAS;AAEL,UAAIsB,SAAS,GAAG/B,MAAM,CAACgC,UAAP,CAAkB,KAAlB,EAAyBC,MAAzB,CAAgCpB,IAAhC,EAAsCqB,MAAtC,CAA6C,KAA7C,CAAhB;AACA9B,MAAAA,KAAK,CAAC+B,QAAN,GAAiBJ,SAAjB;;AACA,UAAI;AACA,cAAMjC,KAAK,CAACsC,GAAN,CAAU,oBAAV,EAAgC;AAAChC,UAAAA;AAAD,SAAhC,EAAyC;AAC3CiC,UAAAA,OAAO,EAAE;AAACC,YAAAA,aAAa,EAAEnC;AAAhB;AADkC,SAAzC,CAAN;AAGAoC,QAAAA,MAAM,CAACC,KAAP,CAAa,6BAAb;AACH,OALD,CAKE,OAAOC,GAAP,EAAY;AACVD,QAAAA,KAAK,CAACC,GAAG,CAACC,QAAJ,CAAanB,IAAb,CAAkBoB,GAAnB,CAAL;AACH;AACJ;AACJ,GAhBD;;AAkBA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEnB,oBAAhB;AAAA,gCACI;AAAA,2CAEA;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,OAAxB;AAAgC,YAAA,QAAQ,EAAER;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA,0CAEA;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,MAAxB;AAA+B,YAAA,QAAQ,EAAEA;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eASQ;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAeQP,KAAK,gBACL;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEqB,mBAAhB;AAAA,gDAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEd;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADK,GAQE,EAvBf;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;;GA5EuBjB,c;;KAAAA,c","sourcesContent":["import React,{useContext,useState,useEffect} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\nexport default function ChangePassword() {\r\n    const crypto = require('crypto')\r\n    const state = useContext(GlobalState)\r\n    const [token] = state.token\r\n    const [infor,setInfor] = state.userAPI.infor\r\n    const [users,setUsers] = state.userAPI.users\r\n    const [check,setCheck] = useState(false)\r\n    const [confirm,setConfirm] = useState([])\r\n    const [pass,setPass] = useState('')\r\n\r\n    useEffect(() => {\r\n        \r\n        getUsers()\r\n    }, [])\r\n\r\n    const handleChangeInput = e =>{\r\n        const {name, value} = e.target\r\n        setConfirm({...confirm,[name]:value})\r\n        \r\n    }\r\n    const getUsers = async () => {\r\n        const res = await axios.get('/user/users')\r\n        setUsers(res.data.users)\r\n    }\r\n    const handleSubmit_Confirm = e =>{\r\n        e.preventDefault()\r\n        users.forEach((user) => {\r\n            console.log(user)\r\n        })\r\n    }\r\n    const handleSubmit_Change = async e =>{\r\n        e.preventDefault()\r\n        \r\n        if(check){\r\n            \r\n            var hashLogin = crypto.createHash('md5').update(pass).digest('hex');\r\n            infor.password = hashLogin\r\n            try {\r\n                await axios.put('/user/account/edit', {infor}, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                window.alert(\"Update account successfully\")\r\n            } catch (err) {\r\n                alert(err.response.data.msg)\r\n            }\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className='old-pass'>\r\n                <form onSubmit={handleSubmit_Confirm}>\r\n                    <div>\r\n                    Email\r\n                    <input type=\"text\" name=\"email\" onChange={handleChangeInput}/>\r\n                    </div>\r\n                    <div>\r\n                    Name\r\n                    <input type=\"text\" name=\"name\" onChange={handleChangeInput}/>\r\n                    </div>\r\n                        <button type=\"submit\">Confirm</button>\r\n                </form>\r\n            </div>\r\n            {\r\n                check?\r\n                <div className='new-pass'>\r\n                    <form onSubmit={handleSubmit_Change}>\r\n                    New Password\r\n                        <input type=\"text\" onChange={handleChangeInput}/>\r\n\r\n                        <button type=\"submit\">Confirm</button>\r\n                    </form>\r\n                </div>:\"\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}