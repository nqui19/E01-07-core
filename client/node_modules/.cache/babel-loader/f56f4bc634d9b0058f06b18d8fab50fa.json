{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nexport default function UserAPI(token) {\n  _s();\n\n  const [Logged, isLogged] = useState(false);\n  const [Admin, isAdmin] = useState(false);\n  const [Seller, isSeller] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [infor, setInfor] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [orders, setOrders] = useState([]);\n\n  const getUsers = async () => {\n    const res = await axios.get('/user/users');\n    setUsers(res.data.users);\n  };\n\n  const getOrder = async () => {\n    const res = await axios.get('/user/order');\n    setOrders(res.data.orders);\n  };\n\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          isLogged(true);\n\n          if (res.data.role === 1) {\n            isAdmin(true);\n          } else if (res.data.role === 2) {\n            isSeller(true);\n          }\n\n          setCart(res.data.cart);\n          setInfor(res.data);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n      getUsers();\n      getOrder();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!Logged) return alert('Please login to continue');\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n      await axios.patch('/user/addCart', {\n        cart: [...cart, { ...product,\n          quantity: 1\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } else {\n      alert(\"This product has been added to cart\");\n    }\n  };\n\n  return {\n    isLogged: [Logged, isLogged],\n    isAdmin: [Admin, isAdmin],\n    isSeller: [Seller, isSeller],\n    cart: [cart, setCart],\n    infor: [infor, setInfor],\n    users: [users, setUsers],\n    orders: [orders, setOrders],\n    addToCart: addCart\n  };\n}\n\n_s(UserAPI, \"GxkGIFDZPHQiYzvZW5zQWojW1vI=\");\n\n_c = UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["C:/Users/MyPC/Desktop/e-commerce2/client/src/api/UserAPI.js"],"names":["axios","React","useState","useEffect","UserAPI","token","Logged","isLogged","Admin","isAdmin","Seller","isSeller","cart","setCart","infor","setInfor","users","setUsers","orders","setOrders","getUsers","res","get","data","getOrder","getUser","headers","Authorization","role","err","alert","response","msg","addCart","product","check","every","item","_id","quantity","patch","addToCart"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACnC,QAAM,CAACC,MAAD,EAASC,QAAT,IAAqBL,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAM,CAACM,KAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACQ,MAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACU,IAAD,EAAMC,OAAN,IAAiBX,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACY,KAAD,EAAOC,QAAP,IAAmBb,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACc,KAAD,EAAOC,QAAP,IAAmBf,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACgB,MAAD,EAAQC,SAAR,IAAqBjB,QAAQ,CAAC,EAAD,CAAnC;;AAEA,QAAMkB,QAAQ,GAAG,YAAY;AACzB,UAAMC,GAAG,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,aAAV,CAAlB;AACAL,IAAAA,QAAQ,CAACI,GAAG,CAACE,IAAJ,CAASP,KAAV,CAAR;AACH,GAHD;;AAIA,QAAMQ,QAAQ,GAAG,YAAY;AACzB,UAAMH,GAAG,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,aAAV,CAAlB;AACAH,IAAAA,SAAS,CAACE,GAAG,CAACE,IAAJ,CAASL,MAAV,CAAT;AACH,GAHD;;AAIAf,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGE,KAAH,EAAS;AACL,YAAMoB,OAAO,GAAG,YAAY;AACxB,YAAI;AACA,gBAAMJ,GAAG,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,aAAV,EAAwB;AACtCI,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAEtB;AAAhB;AAD6B,WAAxB,CAAlB;AAGAE,UAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,cAAGc,GAAG,CAACE,IAAJ,CAASK,IAAT,KAAkB,CAArB,EAAwB;AAACnB,YAAAA,OAAO,CAAC,IAAD,CAAP;AAAc,WAAvC,MACK,IAAGY,GAAG,CAACE,IAAJ,CAASK,IAAT,KAAkB,CAArB,EAAwB;AAACjB,YAAAA,QAAQ,CAAC,IAAD,CAAR;AAAe;;AAE7CE,UAAAA,OAAO,CAACQ,GAAG,CAACE,IAAJ,CAASX,IAAV,CAAP;AACAG,UAAAA,QAAQ,CAACM,GAAG,CAACE,IAAL,CAAR;AAEH,SAXD,CAWE,OAAOM,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaR,IAAb,CAAkBS,GAAnB,CAAL;AACH;AACJ,OAfD;;AAgBAP,MAAAA,OAAO;AACPL,MAAAA,QAAQ;AACRI,MAAAA,QAAQ;AAEX;AACJ,GAvBQ,EAuBP,CAACnB,KAAD,CAvBO,CAAT;;AAyBA,QAAM4B,OAAO,GAAG,MAAMC,OAAN,IAAkB;AAC9B,QAAG,CAAC5B,MAAJ,EAAY,OAAOwB,KAAK,CAAC,0BAAD,CAAZ;AAEZ,UAAMK,KAAK,GAAGvB,IAAI,CAACwB,KAAL,CAAWC,IAAI,IAAG;AAC5B,aAAOA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA5B;AACH,KAFa,CAAd;;AAGA,QAAGH,KAAH,EAAS;AACLtB,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAS,EAAC,GAAGsB,OAAJ;AAAaK,QAAAA,QAAQ,EAAC;AAAtB,OAAT,CAAD,CAAP;AACA,YAAMvC,KAAK,CAACwC,KAAN,CAAY,eAAZ,EAA4B;AAAC5B,QAAAA,IAAI,EAAC,CAAC,GAAGA,IAAJ,EAAS,EAAC,GAAGsB,OAAJ;AAAaK,UAAAA,QAAQ,EAAC;AAAtB,SAAT;AAAN,OAA5B,EAAsE;AACxEb,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,EAAEtB;AAAhB;AAD+D,OAAtE,CAAN;AAGH,KALD,MAKK;AACDyB,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACH;AACJ,GAdD;;AAgBA,SAAO;AACHvB,IAAAA,QAAQ,EAAE,CAACD,MAAD,EAAQC,QAAR,CADP;AAEHE,IAAAA,OAAO,EAAE,CAACD,KAAD,EAAQC,OAAR,CAFN;AAGHE,IAAAA,QAAQ,EAAE,CAACD,MAAD,EAAQC,QAAR,CAHP;AAIHC,IAAAA,IAAI,EAAE,CAACA,IAAD,EAAOC,OAAP,CAJH;AAKHC,IAAAA,KAAK,EAAC,CAACA,KAAD,EAAOC,QAAP,CALH;AAMHC,IAAAA,KAAK,EAAC,CAACA,KAAD,EAAOC,QAAP,CANH;AAOHC,IAAAA,MAAM,EAAC,CAACA,MAAD,EAAQC,SAAR,CAPJ;AAQHsB,IAAAA,SAAS,EAACR;AARP,GAAP;AAUH;;GApEuB7B,O;;KAAAA,O","sourcesContent":["import axios from 'axios'\r\nimport React,{useState, useEffect} from 'react'\r\n\r\nexport default function UserAPI(token) {\r\n    const [Logged, isLogged] = useState(false)\r\n    const [Admin,isAdmin] = useState(false)\r\n    const [Seller,isSeller] = useState(false)\r\n    const [cart,setCart] = useState([])\r\n    const [infor,setInfor] = useState([])\r\n    const [users,setUsers] = useState([])\r\n    const [orders,setOrders] = useState([])\r\n\r\n    const getUsers = async () => {\r\n        const res = await axios.get('/user/users')\r\n        setUsers(res.data.users)\r\n    }\r\n    const getOrder = async () => {\r\n        const res = await axios.get('/user/order')\r\n        setOrders(res.data.orders)\r\n    }\r\n    useEffect(()=> {\r\n        if(token){\r\n            const getUser = async () => {\r\n                try {\r\n                    const res = await axios.get('/user/infor',{\r\n                        headers: {Authorization: token}\r\n                    })\r\n                    isLogged(true)\r\n                    if(res.data.role === 1) {isAdmin(true)}\r\n                    else if(res.data.role === 2) {isSeller(true)}\r\n                    \r\n                    setCart(res.data.cart)\r\n                    setInfor(res.data)\r\n                    \r\n                } catch (err) {\r\n                    alert(err.response.data.msg)\r\n                }\r\n            }\r\n            getUser()\r\n            getUsers()\r\n            getOrder()\r\n            \r\n        }\r\n    },[token])\r\n\r\n    const addCart = async(product) => {\r\n        if(!Logged) return alert('Please login to continue')\r\n\r\n        const check = cart.every(item =>{\r\n            return item._id !== product._id\r\n        })\r\n        if(check){\r\n            setCart([...cart,{...product, quantity:1}])\r\n            await axios.patch('/user/addCart',{cart:[...cart,{...product, quantity:1}]},{\r\n                headers: {Authorization: token}\r\n            })\r\n        }else{\r\n            alert(\"This product has been added to cart\")\r\n        }\r\n    }\r\n\r\n    return {\r\n        isLogged: [Logged,isLogged],\r\n        isAdmin: [Admin, isAdmin],\r\n        isSeller: [Seller,isSeller],\r\n        cart: [cart, setCart],\r\n        infor:[infor,setInfor],\r\n        users:[users,setUsers],\r\n        orders:[orders,setOrders],\r\n        addToCart:addCart\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}